<style lang="less">
@import 'style/weui.less';
page{
  background-color: #F8F8F8;
  font-size: 16px;
}
.page__hd {
  padding: 40px;
}
.page__bd {
  padding-bottom: 40px;
}
.page__bd_spacing {
  padding-left: 15px;
  padding-right: 15px;
}
.page__ft{
  padding-bottom: 10px;
  text-align: center;
}
.page__title {
  text-align: left;
  font-size: 20px;
  font-weight: 400;
}
.page__desc {
  margin-top: 5px;
  color: #888888;
  text-align: left;
  font-size: 14px;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import api from '@/utils/api'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/topics/index',
      'pages/topics/userIndex',
      'pages/topics/show',
      'pages/replies/index',
      'pages/replies/userIndex',
      'pages/users/me',
      'pages/users/show',
      'pages/users/edit',
      'pages/auth/login',
      'pages/auth/register'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'LaraBBS',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      list: [{
        pagePath: 'pages/topics/index',
        text: '首页',
        iconPath: 'images/index.png',
        selectedIconPath: 'images/index_selected.png'
      }, {
        pagePath: 'pages/users/me',
        text: '我的',
        iconPath: 'images/user.png',
        selectedIconPath: 'images/user_selected.png'
      }],
      color: '#707070',
      selectedColor: '#00b5ad'
    }
  }

  constructor () {
    super()
    this.use('promisify')
    this.use('requestfix')
  }

  onLaunch() {
  }

  async getCurrentUser () {
    // 如果用户未登录
    if (!this.checkLogin()) {
      return null
    }

    // 从缓存中获取用户信息
    let user = wepy.getStorageSync('user')

    try {
      // 登录了但是缓存中么有，请求接口获取
      if (!user) {
        let userResponse = await api.authRequest('user')
        if (userResponse.statusCode === 200) {
          user = userResponse.data
          wepy.setStorageSync('user', user)
        }
      }
    } catch (err) {
      api.showErrorModal(err)
    }
    return user
  }

  checkLogin () {
    return (wepy.getStorageSync('access_token') !== '')
  }

  globalData = {
    refreshPages: []
  }

  checkRefreshPages (route, callback) {
    let refreshIndex = this.globalData.refreshPages.indexOf(route)
    if (refreshIndex === -1) {
      return
    }
    this.globalData.refreshPages.splice(refreshIndex, 1)
    callback && callback()
  }
}
</script>
